version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres:15.3-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: SuperSecret
      POSTGRES_USER: tools_management_user
      POSTGRES_DB: tools_management
    healthcheck:
      test: [ "CMD", "pg_isready", "-q"]
      interval: 5s
      timeout: 1s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7.1
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: SuperSecret
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 5s
      timeout: 1s
      retries: 3
    ports:
      - "5050:80"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - ./pgpass:/pgpass
    depends_on:
      - postgres

  tools:
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    container_name: tools-management-api
    environment:
      DATABASE_PASSWORD: SuperSecret
      DATABASE_USER: tools_management_user
      DATABASE_URL: "jdbc:postgresql://postgres:5432/tools_management"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/tools-management-api/actuator/health"]
      interval: 5s
      timeout: 1s
      retries: 3
    ports:
      - "8080:8080"
      - "4545:4545"
    depends_on:
      postgres:
        condition: service_healthy

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    healthcheck:
      test: [ "CMD", "wget", "-O", "-", "http://localhost:9090/graph"]
      interval: 5s
      timeout: 1s
      retries: 3
    ports:
      - "9090:9090"
    depends_on:
      tools:
        condition: service_healthy

